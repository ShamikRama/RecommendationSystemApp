// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// AnaliticRepository is an autogenerated mock type for the AnaliticRepository type
type AnaliticRepository struct {
	mock.Mock
}

// SaveUserAction provides a mock function with given fields: userId, productId, action, productName, category
func (_m *AnaliticRepository) SaveUserAction(userId uint32, productId uint32, action string, productName string, category string) error {
	ret := _m.Called(userId, productId, action, productName, category)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint32, uint32, string, string, string) error); ok {
		r0 = rf(userId, productId, action, productName, category)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveUserEvent provides a mock function with given fields: userId, email, event
func (_m *AnaliticRepository) SaveUserEvent(userId uint32, email string, event string) error {
	ret := _m.Called(userId, email, event)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint32, string, string) error); ok {
		r0 = rf(userId, email, event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateProductStats provides a mock function with given fields: productID, column
func (_m *AnaliticRepository) UpdateProductStats(productID uint32, column string) error {
	ret := _m.Called(productID, column)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint32, string) error); ok {
		r0 = rf(productID, column)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewAnaliticRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewAnaliticRepository creates a new instance of AnaliticRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAnaliticRepository(t mockConstructorTestingTNewAnaliticRepository) *AnaliticRepository {
	mock := &AnaliticRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
